
grant codeBase "file://${codebase.randomizedtesting-junit4-ant-tests}" {
  permission java.util.PropertyPermission "*", "read,write"; // AntBuildFileTestBase -> ant Project.setSystemProperties
  permission java.io.FilePermission "${junit4.childvm.cwd}${/}*", "read,write,delete";
  permission java.lang.RuntimePermission "setIO";
  // classloader getResource() from jar
  permission java.io.FilePermission "*", "read";
};

grant codeBase "file://${codebase.randomizedtesting-junit4-ant}" {
  permission java.util.PropertyPermission "*", "read,write";
   // we use ProcessHandle in BootstrapEvent
   permission java.lang.RuntimePermission "manageProcess";
  // needed because JUnit requests/ runners don't use access controller contexts
  // and the access control domain propagates up the stack.
  permission java.lang.RuntimePermission "accessDeclaredMembers";
  // needed for io stream handling
  permission java.lang.RuntimePermission "setIO";
  // needed for accessing log files, etc.
  permission java.io.FilePermission "${junit4.tempDir}${/}*", "read,write,delete,execute";
  permission java.io.FilePermission "${junit4.childvm.cwd}${/}*", "read,write,delete";
  permission java.io.FilePermission "*", "read";
};

grant codeBase "file://${codebase.randomizedtesting}" {
  // tests.prefix
  permission java.util.PropertyPermission "*", "read";
  // optionally needed for access to private test methods (e.g. beforeClass)
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
  // needed to handle uncaught exceptions from other threads
  permission java.lang.RuntimePermission "setDefaultUncaughtExceptionHandler";
  // needed for getTopThreads
  permission java.lang.RuntimePermission "modifyThreadGroup";
  // needed for TestClass creation
  permission java.lang.RuntimePermission "accessDeclaredMembers";
  // needed for ThreadLeakControl
  permission java.lang.RuntimePermission "getStackTrace";
  permission java.io.FilePermission "*", "read";
};

grant codeBase "file://${codebase.junit}" {
  // needed for TestClass creation
  permission java.lang.RuntimePermission "accessDeclaredMembers";
  permission java.lang.RuntimePermission "setIO";
  permission java.util.PropertyPermission "*", "read,write";
  permission java.io.FilePermission "*", "read";
};

grant codebase "file://${codebase.ant}" {
  permission java.util.PropertyPermission "*", "read,write";
  permission java.io.FilePermission "*", "read";
};

grant codebase "file://${codebase.ant-launcher}" {
  permission java.util.PropertyPermission "*", "read,write";
  permission java.io.FilePermission "*", "read";
};
