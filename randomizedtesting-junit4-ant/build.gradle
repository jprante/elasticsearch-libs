
configurations {
    mains
    tests
}

dependencies {
    compile project(":randomizedtesting")
    compile project(":ant")
    compile project(":guava")
    compile "org.ow2.asm:asm:${project.property('asm.version')}"
    compile("org.simpleframework:simple-xml:${project.property('simpleframework.version')}") {
        exclude module: 'stax-api'
    }
}

afterEvaluate {
    compileJava {
        inputs.property("moduleName", 'org.xbib.elasticsearch.randomizedtesting.junit.ant')
        doFirst {
            options.compilerArgs = [
                    '--module-path', classpath.asPath
            ]
            classpath = files()
        }
    }
    compileTestJava {
        inputs.property("moduleName", 'org.xbib.elasticsearch.randomizedtesting.junit.ant.test')
        doFirst {
            options.compilerArgs = [
                    '--module-path', classpath.asPath
            ]
            classpath = files()
        }
    }
    test {
        dependsOn 'jar', 'testJar'
        doFirst {
            classpath = files(configurations.testRuntime) + configurations.mains.artifacts.files + configurations.tests.artifacts.files
            jvmArgs = [
                    '--module-path', classpath.asPath,
                    '--add-modules', 'ALL-MODULE-PATH'
            ]
            scanForTestClasses = false
            exclude '**/donotexecute/*'
            exclude '**/Test*$*'
            include '**/Test*.class'
        }
    }
    javadoc {
        inputs.property("moduleName", 'org.xbib.elasticsearch.randomizedtesting.junit.ant')
        doFirst {
            options.addStringOption('-module-path', classpath.asPath)
            classpath = files()
        }
    }
}

task testJar(type: Jar) {
    group = 'build'
    from sourceSets.test.output
    classifier 'tests'
}

artifacts {
    mains jar
    tests testJar
    archives testJar
}

signing {
    sign testJar
}
